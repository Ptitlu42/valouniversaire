version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - HOST=0.0.0.0
      - GIN_MODE=release
    volumes:
      - ./configs:/app/configs:ro
      - app_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Service de développement avec hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - HOST=0.0.0.0
      - GIN_MODE=debug
    volumes:
      - .:/app
      - /app/vendor
    command: air
    profiles: ["dev"]

  # Base de données (optionnel pour persistance)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: valouniversaire
      POSTGRES_USER: gameuser
      POSTGRES_PASSWORD: gamepass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    profiles: ["postgres"]

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    profiles: ["redis"]

  # Monitoring avec Prometheus (optionnel)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deployments/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    profiles: ["monitoring"]

volumes:
  app_data:
  postgres_data:
  redis_data:
  prometheus_data: